
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    [{"authors":null,"categories":null,"content":"Hello! I am a data scientist and quantitative researcher with experience across several domains, including clinical neuroscience, public health, and public policy. Currently I am working to solve policy-related problems for government partners through data-driven research and insights at the Texas Policy Lab @ Rice University. Previously I worked in clinical research at Baylor College of Medicine, investigating neuropsychiatric disorders and cognitive dysfunction to develop novel treatments and improve outcomes for severe mental illness. I am passionate about using data and technology for good, particularly when it comes to advancing healthcare and improving outcomes, and I love a good visualization.\nOutside of the office, I enjoy live music, espresso, and eating my way across Houston. If you’re interested in chatting or working together, feel free to contact me!\nWebsite is currently under construction.\n","date":1607817600,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1607817600,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"Hello! I am a data scientist and quantitative researcher with experience across several domains, including clinical neuroscience, public health, and public policy. Currently I am working to solve policy-related problems for government partners through data-driven research and insights at the Texas Policy Lab @ Rice University.","tags":null,"title":"Megan Rafferty","type":"authors"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature. Slides can be added in a few ways:\nCreate slides using Wowchemy’s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes. Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"https://meganrafferty.github.io/talk/example-talk/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example-talk/","section":"event","summary":"An example talk using Wowchemy's Markdown slides feature.","tags":[],"title":"Example Talk","type":"event"},{"authors":[],"categories":[],"content":"Social vulnerability refers to a community’s resilience when confronted by external stresses on human health. Factors such as poverty and lack of access to transportation may weaken a community’s ability to withstand the impacts from adverse events such as natural disasters and public health crises, which can lead to human suffering and financial loss. At the individual level, social vulnerability can also impact one’s ability to manage chronic conditions like cancer or diabetes and has been associated with a higher likelihood of in-hospital mortality with COVID-19.\nThe social vulnerability index (SVI) was created by the Centers for Disease Control \u0026amp; Prevention (CDC) and the Agency for Toxic Substances and Disease Registry (ATSDR) to measure social vulnerability. While initially developed for emergency preparedness, such as how to allocate resources during a crisis, the SVI has since been adopted to risk stratification and healthcare efforts due to the link between SVI and the social determinants of health. In other words, social vulnerability is tied to overall health and wellness and can negatively impact both individuals and their communities, such as leading to higher rates of diseases and healthcare utilization.\nI created the “Mapping Social Vulnerability” tool to explore social vulnerability across the United States. The interactive tool can be used to identify communities at higher risk of adverse health outcomes or with greater social and healthcare needs.\n","date":1680393600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1680393600,"objectID":"a7ef5a52863c8e8ba107db493c6047cf","permalink":"https://meganrafferty.github.io/project/mapping-social-vulnerability/","publishdate":"2023-04-02T00:00:00Z","relpermalink":"/project/mapping-social-vulnerability/","section":"project","summary":"Interactive tool that explores CDC's Social Vulnerability Index","tags":["Projects"],"title":"Mapping Social Vulnerability","type":"project"},{"authors":null,"categories":null,"content":"I created an interactive dashboard to visualize the effects of imbalanced data and other parameters on model performance metrics. This is part of a larger effort to use visualization to help convey the intuition behind machine learning models and concepts.\nFor ease of accessibility, the dashboard was created in a Jupyter notebook and can be used within the notebook itself or deployed using Python’s Voila framework. To learn more about the project, see the GitHub link above.\n","date":1675209600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1675209600,"objectID":"e2e1c49eccc4489ba429a2006595aa67","permalink":"https://meganrafferty.github.io/project/ml_viz/","publishdate":"2023-02-01T00:00:00Z","relpermalink":"/project/ml_viz/","section":"project","summary":"Interactive visualization of machine learning concepts","tags":["Projects","Python","Jupyter","Visualization"],"title":"Visualizing Machine Learning","type":"project"},{"authors":[],"categories":[],"content":"The following is an overview of an independent project of mine. These findings have not been peer reviewed.\nObjective Traumatic Brain Injury (TBI) is a significant health concern that results in disability and death of thousands of people each year in the United States. TBI occurs when a sudden trauma causes damage to the brain and is characterized by a disruption in the normal function of the brain. Symptoms can be mild, moderate, or severe depending on the intensity of damage to the brain tissue. This aim of this analysis was to predict in-hospital mortality in TBI patients with diagnosis of intracranial hemorrhage (ICH), a common and severe feature of severe TBI. Identifying modifiable risk factors and predicting outcomes among ICH patients may be useful in managing prognostic expectations, making treatment decisions, reducing in-hospital mortality, and improving health outcomes.\nMethods Statewide hospital trauma registry data from years 2012 to 2016 were obtained and relevant demographic, injury, and clinical variables were selected for this analysis. The dataset was filtered by ICD-9 codes and other clinical variables to identify patients admitted with traumatic brain injury and intracranial hemorrhage. Patients under the age of 20 were excluded. Missing values were imputed or dropped, and relevant variables were transformed (e.g., encoding, scaling) and engineered as necessary. The dataset was then randomly split with a 75:25 ratio into training and test sets, totaling 8,215 and 2,738 observations, respectively.\nLogistic regression, random forest, and gradient boosting models were investigated. For logistic regression, LASSO was used for feature selection, and cubic splines were used for non-linearly associated continuous predictors. For random forest and boosting, all initially selected variables were included in the models. Hyperperamaters were tuned using stratified 5-fold cross-validation in order to find the optimal values. To assess and compare predictive performance for each model on the test set, accuracy, area under the curve (AUC), sensitivity, and specificity were computed. Receiver Operator Curves (ROC) were constructed to illustrate predictive performance. In addition, model performance was assessed and compared after using a downsampling technique on the training set in an attempt to correct the bias introduced by a class imbalance.\nFindings Following variable selection, the final model for logistic regression included gender, age, systolic blood pressure, ICU length of stay, primary payment method, Glasgow coma score (GCS), injury severity score (ISS), and concussion. Significant interaction terms between ICU stay and ISS were included. For random forest and boosting models, all initially selected variables were included in the model. The most important predictors were ISS, GCS, and ICU stay based on feature importance scores. Performance metrics for each of the three models are shown below in Table 1.\nOverall, logistic regression outperformed both random forest and gradient boosting models across both data sets. All models had high predictive performance with the full data set, but logistic regression performed slightly better (AUC = 0.923) compared to gradient boosting (AUC = 0.903) and random forest (AUC = 0.886). However, all models had poor sensitivity (0.41-0.462). Considering the potential clinical application of rapid identification of high-risk patients, high sensitivity of the prediction model may be of greater importance to a clinician.\nWith the downsampled data set, all models saw an increase in AUC and sensitivity and a small decrease in specificity. Logistic regression (AUC = 0.934) once again outperform boosting (AUC = 0.912) and random forest (AUC = 0.914) in terms of AUC. However, the gradient boosting model had the greatest sensitivity (SN = 0.904) among models.\nSignificance Real-world data, such as those from trauma registries, provide a rich source of data for training predictive and prognostic models and can be used to make real-world impact in healthcare decision making. Early prediction of in-hospital mortality can help clinicians and other healthcare personnel manage prognostic expectations, inform resource management, make treatment decisions in a timely manner, and ensure that patients are receiving appropriate care.\n","date":1663372800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1663372800,"objectID":"7e08e95b88caf877ec0885476ab2447b","permalink":"https://meganrafferty.github.io/project/predicting-mortality-tbi/","publishdate":"2022-09-17T00:00:00Z","relpermalink":"/project/predicting-mortality-tbi/","section":"project","summary":"Utilizing machine learning and real-world data to predict mortality in TBI patients admitted to the ICU","tags":["Projects"],"title":"Predicting In-Hospital Mortality for Traumatic Brain Injury","type":"project"},{"authors":[],"categories":[],"content":"Geocoding is the process of converting a physical address or location into geographical coordinates and is useful in a wide range of applications and industries that involve spatial data. This report provides an introduction to two basic geocoding tasks–geocoding physical addresses and identifying corresponding census tracts–and includes instructions for using ArcGIS ($) and Nominatim API in R (free).\nFor further instruction, see ArcGIS documentation here and Nominatim here.\nGetting started Prep, clean, and standardize addresses Before geocoding, addresses should be cleaned and prepared to standard postal format in order to obtain reliable geocodes, regardless of the method used (though it is undoubtedly more important when using the Nominatim API). While ArcGIS can handle minor spelling errors, certain spelling and formatting errors can still lead to inaccurate geocodes. Common cleaning and preparation steps may include:\nCorrecting common spelling errors (e.g., city names) Abbreviating address suffixes (e.g., drive should be dr) Replacing incorrect zip codes with five zeros (i.e., 00000) Miscellaneous cleaning (e.g., removing random symbols, multiple spaces, etc.) Saving new address file (for ArcGIS, addresses can either be stored in a single field with address components separated by a comma or in multiple fields) address_long \u0026lt;- c(\u0026#34;lane\u0026#34;, \u0026#34;road\u0026#34;, \u0026#34;drive\u0026#34;, \u0026#34;drv\u0026#34;, \u0026#34;street\u0026#34;, \u0026#34;apartment\u0026#34;, \u0026#34;avenue\u0026#34;, \u0026#34;boulevard\u0026#34;, \u0026#34;expressway\u0026#34;, \u0026#34;highway\u0026#34;, \u0026#34;highwat\u0026#34;, \u0026#34;suite\u0026#34;, \u0026#34;court\u0026#34;, \u0026#34;circle\u0026#34;, \u0026#34;circlr\u0026#34;) address_abrv \u0026lt;- c(\u0026#34;ln\u0026#34;, \u0026#34;rd\u0026#34;, \u0026#34;dr\u0026#34;, \u0026#34;dr\u0026#34;, \u0026#34;st\u0026#34;, \u0026#34;apt\u0026#34;, \u0026#34;ave\u0026#34;, \u0026#34;blvd\u0026#34;, \u0026#34;expy\u0026#34;, \u0026#34;hwy\u0026#34;, \u0026#34;hwy\u0026#34;, \u0026#34;ste\u0026#34;, \u0026#34;ct\u0026#34;, \u0026#34;cir\u0026#34;, \u0026#34;cir\u0026#34;) clean_st_address \u0026lt;- function(df, st_address, city, zip) { df \u0026lt;- df %\u0026gt;% dplyr::drop_na(st_address) %\u0026gt;% dplyr::mutate(st_address = tolower(st_address)) %\u0026gt;% dplyr::mutate(zip = ifelse(stringr::str_detect(zip, \u0026#39;\\\\d\\\\d\\\\d\\\\d\\\\d\u0026#39;), zip, \u0026#34;00000\u0026#34;)) %\u0026gt;% dplyr::mutate(st_address = gsub(\u0026#34;\\\\s+\u0026#34;, \u0026#34; \u0026#34;, st_address), st_address = gsub(\u0026#34;\\\\.|\\\\,|\\\\sapt.*|\\\\sunit.*|\\\\s#.*|\\\\#|\\\\-|\\\\s\\\\d+\u0026#34;, \u0026#34;\u0026#34;, st_address), st_address = stringi::stri_replace_all_fixed(st_address, address_long, address_abrv, vectorize_all = FALSE)) %\u0026gt;% dplyr::mutate(city = tolower(gsub(\u0026#34;\\\\s+\u0026#34;, \u0026#34; \u0026#34;, city)), city = gsub(\u0026#34;\\\\,.*|\\\\stx|\\\\.\u0026#34;, \u0026#34;\u0026#34;, city)) return(df) } Geocoding with ArcGIS 1. Geocode addresses To begin, log in to ArcGIS Pro with NetID/username and password. Follow the steps below to obtain latitude and longitude coordinates.\nNew project → Map Go to Geoprocessing pane on right side of window → Toolboxes → click on Geocoding Tools → select Geocode Addresses Fill in/select parameters Input table = addresses to be geocoded Input address locator = “ArcGIS World Geocoding Service” Output feature class = folder and file name for saving Preferred location type = “Address location” Click Run 1.1. Identify corresponding census tracts If you need to identify corresponding census tracts, follow the instructions below. Otherwise, continue to step 2.\nDownload TIGER/Line shapefile for state Add shapefile data to map: Map → Add Data → Add data to the map Shapefile must be saved in same folder as address data Go to Geoprocessing pane on right → Toolboxes → Analysis tools → Overlay → Spatial Join Fill in/select parameters Target features = geocoded addresses Join features = shapefile Output feature class = folder and file name for saving Join operator = “join one to one” Match option = “within” Click Run 2. Export geo data To view resulting table, right click on table name in Contents pane → select Attribute Table To export data, click on the three lines in upper right corner of attribute table → select Export → save data with chosen file name + .csv (e.g., file_name.csv) 3. Remove unreliable geocodes Remove addresses identified as being outside of the state Remove addresses that did not return one of the following Addr_type: Point Address, Street Address, or Subaddress Drop match scores (Score) below 90% clean_arcgis_data \u0026lt;- function(df, state) { df \u0026lt;- df %\u0026gt;% filter(Region == state, Join_Count == 1, Addr_type %in% c(\u0026#34;PointAddress\u0026#34;, \u0026#34;StreetAddress\u0026#34;, \u0026#34;Subaddress\u0026#34;), Score \u0026gt;= 90) %\u0026gt;% rename(address = \u0026#34;IN_SingleLine\u0026#34;) return(df) } Geocoding with Nominatim API While Nominatim may not be as accurate as ArcGIS, it is a decent alternative if you do not have access to an ArcGIS license and are looking for a free option. Below are the functions you will need to geocode your addresses. Be sure to check Nominatim’s Usage Policy for information on usage and call limits.\n1. Generate API call This function will construct the search request.\nnominatim_search \u0026lt;- function(search_query_url, country_url, language_url, email_url) { library(RCurl) nominatim_search_api \u0026lt;- \u0026#34;https://nominatim.openstreetmap.org/search/\u0026#34; search_query_url \u0026lt;- sapply(search_query_url, as.list) search_query_url \u0026lt;- sapply(search_query_url, URLencode) if (!is.null(country_url)) { country_url \u0026lt;- paste0(\u0026#34;\u0026amp;countrycodes=\u0026#34;, country_url) } parameters_url \u0026lt;- paste0(\u0026#34;?format=json\u0026#34;, \u0026#34;\u0026amp;addressdetails=1\u0026amp;extratags=1\u0026amp;limit=1\u0026#34;, …","date":1655424000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1655424000,"objectID":"1fef131b8027300e0e282ad93157465b","permalink":"https://meganrafferty.github.io/project/geocoding/","publishdate":"2022-06-17T00:00:00Z","relpermalink":"/project/geocoding/","section":"project","summary":"How-to for common geocoding tasks","tags":["Posts"],"title":"Geocoding with ArcGIS and Nominatim","type":"project"},{"authors":[],"categories":[],"content":"The following is an overview of an independent research project of mine that I presented at a national conference.\nBackground Adrenal cortical carcinoma (ACC) is a rare and aggressive cancer with poor prognosis. It is the second most aggressive endocrine cancer following anaplastic thyroid cancer and has an estimated annual incidence of 0.7–2.0 cases/million. Because of the low incidence of these tumors, data on prognostic factors and survival outcomes are limited. The aim of this analysis was to examine demographic, clinical, and tumor characteristics as potential predictors of overall survival using the 1975-2016 Surveillance, Epidemiology, and End Results (SEER) program data set, which encompasses approximately 34.6% of the US population.\nMethods Reported cases of ACC from 2006 to 2015 were identified, and relevant demographic and clinicopathological data were retrieved, including age at diagnosis, sex, race and ethnicity, tumor laterality, tumor grade, tumor size, clinical summary stage, and surgical treatment. Cases were limited to adults to account for established differences between adult and pediatric ACC patients in incidence, clinical presentation, and biological behaviors. Multivariable Cox proportional hazards regression was utilized to examine the associations between overall survival and demographic and tumor-specific variables. Tree-based survival analysis (TBSA) was used to further elucidate the relationship between potential predictors and mortality risk.\nWhile not as widely used as the Cox Proportional Hazards model for survival data, survival trees are useful nonparametric alternatives. Tree-based methods are simple, easily interpreted, and flexible. Similar to other regression tree analyses, TBSA adaptively partitions the study populations into groups that have different survival distributions, helping to identify hierarchical predictive relationships. The method used in this analysis follows a recursive partitioning algorithm that adopts most aspects of the well-known classification and regression tree algorithm. Using the first step of a full likelihood estimation procedure for the splitting criterion, this method is able to obtain tree-structured relative risk estimates for censored survival data. After growing the initial survival tree, cross-validation and a cost-complexity pruning algorithm were utilized to identify the optimally-pruned tree.\nResults Among ACC cases, the median overall survival time was 21 months, and one- and five-year survival rates were 61% and 32%, respectively. Log-rank tests revealed significant differences in overall survival when stratified by surgery, stage, age, and sex.\nAge, surgical treatment, and tumor stage were found to be significant prognostic factors for overall survival, with surgical treatment having a dominant effect. Those who did not undergo surgical treatment had 3.24 times the mortality risk compared to those who did. Clinical stage was also an important predictor. Those with localized cancer had significantly lower mortality risk compared to those with regional and distant cancer. Compared to those with localized cancer, those with regional cancer had 2.23 times the mortality risk, while those with distant cancer had 3.09 times the mortality risk.\nThe results of TBSA corroborated these findings. Sex, age, race and ethnicity, surgical treatment, clinical stage, and tumor size were included in the TBSA modeling. Using the optimal complexity parameter (which controls the trade-off between the subtree’s complexity and its fit to the data) and cross validation to identify the optimally pruned tree, we see here the final subtree consisting of 5 terminal nodes. Only surgery, stage, and age were selected as significant predictors in the model. Surgical treatment (seen as the root node) was found to have the greatest importance in the model, followed by clinical stage, then age. Those who did not undergo surgical had the highest relative mortality rate according to the computed relative risk estimates, which can be seen in the top line of each terminal node. Looking at the farthest terminal node to the right, we can see that those who did not undergo surgical treatment had a relative mortality rate of 3.2 times the overall mortality rate. To find the prognostic group with the lowest relative mortality rate, we start at the root node (surgery) and work our way down the left of the tree. Those who underwent surgery, had localized disease stage, and were \u0026lt;55 years old at time of diagnosis had the lowest relative mortality rate at 0.32 times the overall mortality rate.\n","date":1612137600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1612137600,"objectID":"2546c3a8d4bcefaf0d2801301a3a041d","permalink":"https://meganrafferty.github.io/project/predictors-of-survival-acc/","publishdate":"2021-02-01T00:00:00Z","relpermalink":"/project/predictors-of-survival-acc/","section":"project","summary":"Survival analysis of adrenal cortical carcinoma cases in the US with machine learning","tags":["Projects"],"title":"Predictors of Survival among Adrenal Cortical Carcinoma Cases","type":"project"},{"authors":["Megan Rafferty","吳恩達"],"categories":["Demo","教程"],"content":"import libr print(\u0026#39;hello\u0026#39;) Overview The Wowchemy website builder for Hugo, along with its starter templates, is designed for professional creators, educators, and teams/organizations - although it can be used to create any kind of site The template can be modified and customised to suit your needs. It’s a good platform for anyone looking to take control of their data and online identity whilst having the convenience to start off with a no-code solution (write in Markdown and customize with YAML parameters) and having flexibility to later add even deeper personalization with HTML and CSS You can work with all your favourite tools and apps with hundreds of plugins and integrations to speed up your workflows, interact with your readers, and much more Get Started 👉 Create a new site 📚 Personalize your site 💬 Chat with the Wowchemy community or Hugo community 🐦 Twitter: @wowchemy @GeorgeCushen #MadeWithWowchemy 💡 Request a feature or report a bug for Wowchemy ⬆️ Updating Wowchemy? View the Update Tutorial and Release Notes Crowd-funded open-source software To help us develop this template and software sustainably under the MIT license, we ask all individuals and businesses that use it to help support its ongoing maintenance and development via sponsorship.\n❤️ Click here to become a sponsor and help support Wowchemy’s future ❤️ As a token of appreciation for sponsoring, you can unlock these awesome rewards and extra features 🦄✨\nEcosystem Hugo Academic CLI: Automatically import publications from BibTeX Inspiration Check out the latest demo of what you’ll get in less than 10 minutes, or view the showcase of personal, project, and business sites.\nFeatures Page builder - Create anything with widgets and elements Edit any type of content - Blog posts, publications, talks, slides, projects, and more! Create content in Markdown, Jupyter, or RStudio Plugin System - Fully customizable color and font themes Display Code and Math - Code highlighting and LaTeX math supported Integrations - Google Analytics, Disqus commenting, Maps, Contact Forms, and more! Beautiful Site - Simple and refreshing one page design Industry-Leading SEO - Help get your website found on search engines and social media Media Galleries - Display your images and videos with captions in a customizable gallery Mobile Friendly - Look amazing on every screen with a mobile friendly version of your site Multi-language - 34+ language packs including English, 中文, and Português Multi-user - Each author gets their own profile page Privacy Pack - Assists with GDPR Stand Out - Bring your site to life with animation, parallax backgrounds, and scroll effects One-Click Deployment - No servers. No databases. Only files. Themes Wowchemy and its templates come with automatic day (light) and night (dark) mode built-in. Alternatively, visitors can choose their preferred mode - click the moon icon in the top right of the Demo to see it in action! Day/night mode can also be disabled by the site admin in params.toml.\nChoose a stunning theme and font for your site. Themes are fully customizable.\nLicense Copyright 2016-present George Cushen.\nReleased under the MIT license.\n","date":1607817600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1607817600,"objectID":"279b9966ca9cf3121ce924dca452bb1c","permalink":"https://meganrafferty.github.io/post/getting-started/","publishdate":"2020-12-13T00:00:00Z","relpermalink":"/post/getting-started/","section":"post","summary":"Welcome 👋 We know that first impressions are important, so we've populated your new site with some initial content to help you get familiar with everything in no time.","tags":["Academic","开源"],"title":"Welcome to Wowchemy, the website builder for Hugo","type":"post"},{"authors":null,"categories":["R"],"content":" R Markdown This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.\nYou can embed an R code chunk like this:\nsummary(cars) ## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.:19.0 3rd Qu.: 56.00 ## Max. :25.0 Max. :120.00 fit \u0026lt;- lm(dist ~ speed, data = cars) fit ## ## Call: ## lm(formula = dist ~ speed, data = cars) ## ## Coefficients: ## (Intercept) speed ## -17.579 3.932 Including Plots You can also embed plots. See Figure 1 for example:\npar(mar = c(0, 1, 0, 1)) pie( c(280, 60, 20), c(\u0026#39;Sky\u0026#39;, \u0026#39;Sunny side of pyramid\u0026#39;, \u0026#39;Shady side of pyramid\u0026#39;), col = c(\u0026#39;#0292D8\u0026#39;, \u0026#39;#F7EA39\u0026#39;, \u0026#39;#C4B632\u0026#39;), init.angle = -50, border = NA ) Figure 1: A fancy pie chart. ","date":1606875194,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1606875194,"objectID":"bf1eb249db79f10ace7d22321494165a","permalink":"https://meganrafferty.github.io/post/2020-12-01-r-rmarkdown/","publishdate":"2020-12-01T21:13:14-05:00","relpermalink":"/post/2020-12-01-r-rmarkdown/","section":"post","summary":"R Markdown This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.","tags":["R Markdown","plot","regression"],"title":"Hello R Markdown","type":"post"},{"authors":null,"categories":null,"content":"The Texas School District COVID-19 Monitoring Dashboard is a dashboard built by my team at the Texas Policy Lab to help Texas policymakers, school districts, and parents of school-age students make better and more informed decisions about COVID-19 mitigation during the pandemic. The dashboard was developed based on guidance from the Centers for Disease Control (CDC) and tracks several standardized metrics, including case numbers, test positivity rates, and hospital capacity, and transmission risk levels within counties and school districts.\n","date":1587945600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1587945600,"objectID":"f870a9699be09eb7fc75102f4beab828","permalink":"https://meganrafferty.github.io/project/covid_dashboard/","publishdate":"2020-04-27T00:00:00Z","relpermalink":"/project/covid_dashboard/","section":"project","summary":"Interactive dashboard tracking COVID-19 metrics and transmission risk levels","tags":["Projects"],"title":"Texas COVID-19 School District Monitoring Dashboard","type":"project"},{"authors":null,"categories":null,"content":"Wowchemy is designed to give technical content creators a seamless experience. You can focus on the content and Wowchemy handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.\nOn this page, you’ll find some examples of the types of technical content that can be rendered with Wowchemy.\nExamples Code Wowchemy supports a Markdown extension for highlighting code syntax. You can customize the styles under the syntax_highlighter option in your config/_default/params.yaml file.\n```python import pandas as pd data = pd.read_csv(\u0026#34;data.csv\u0026#34;) data.head() ``` renders as\nimport pandas as pd data = pd.read_csv(\u0026#34;data.csv\u0026#34;) data.head() Mindmaps Wowchemy supports a Markdown extension for mindmaps.\nSimply insert a Markdown markmap code block and optionally set the height of the mindmap as shown in the example below.\nA simple mindmap defined as a Markdown list:\n```markmap {height=\u0026#34;200px\u0026#34;} - Hugo Modules - wowchemy - wowchemy-plugins-netlify - wowchemy-plugins-netlify-cms - wowchemy-plugins-reveal ``` renders as\n- Hugo Modules - wowchemy - wowchemy-plugins-netlify - wowchemy-plugins-netlify-cms - wowchemy-plugins-reveal A more advanced mindmap with formatting, code blocks, and math:\n```markmap - Mindmaps - Links - [Wowchemy Docs](https://wowchemy.com/docs/) - [Discord Community](https://discord.gg/z8wNYzb) - [GitHub](https://github.com/wowchemy/wowchemy-hugo-themes) - Features - Markdown formatting - **inline** ~~text~~ *styles* - multiline text - `inline code` - ```js console.log(\u0026#39;hello\u0026#39;); console.log(\u0026#39;code block\u0026#39;); ``` - Math: $x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}$ ``` renders as\n- Mindmaps - Links - [Wowchemy Docs](https://wowchemy.com/docs/) - [Discord Community](https://discord.gg/z8wNYzb) - [GitHub](https://github.com/wowchemy/wowchemy-hugo-themes) - Features - Markdown formatting - **inline** ~~text~~ *styles* - multiline text - `inline code` - ```js console.log(\u0026#39;hello\u0026#39;); console.log(\u0026#39;code block\u0026#39;); ``` - Math: $x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}$ Charts Wowchemy supports the popular Plotly format for interactive charts.\nSave your Plotly JSON in your page folder, for example line-chart.json, and then add the {{\u0026lt; chart data=\u0026#34;line-chart\u0026#34; \u0026gt;}} shortcode where you would like the chart to appear.\nDemo:\nYou might also find the Plotly JSON Editor useful.\nMath Wowchemy supports a Markdown extension for $\\LaTeX$ math. You can enable this feature by toggling the math option in your config/_default/params.yaml file.\nTo render inline or block math, wrap your LaTeX math with {{\u0026lt; math \u0026gt;}}$...${{\u0026lt; /math \u0026gt;}} or {{\u0026lt; math \u0026gt;}}$$...$${{\u0026lt; /math \u0026gt;}}, respectively. (We wrap the LaTeX math in the Wowchemy math shortcode to prevent Hugo rendering our math as Markdown. The math shortcode is new in v5.5-dev.)\nExample math block:\n{{\u0026lt; math \u0026gt;}} $$ \\gamma_{n} = \\frac{ \\left | \\left (\\mathbf x_{n} - \\mathbf x_{n-1} \\right )^T \\left [\\nabla F (\\mathbf x_{n}) - \\nabla F (\\mathbf x_{n-1}) \\right ] \\right |}{\\left \\|\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right \\|^2} $$ {{\u0026lt; /math \u0026gt;}} renders as\n$$\\gamma_{n} = \\frac{ \\left | \\left (\\mathbf x_{n} - \\mathbf x_{n-1} \\right )^T \\left [\\nabla F (\\mathbf x_{n}) - \\nabla F (\\mathbf x_{n-1}) \\right ] \\right |}{\\left \\|\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right \\|^2}$$ Example inline math {{\u0026lt; math \u0026gt;}}$\\nabla F(\\mathbf{x}_{n})${{\u0026lt; /math \u0026gt;}} renders as $\\nabla F(\\mathbf{x}_{n})$.\nExample multi-line math using the math linebreak (\\\\):\n{{\u0026lt; math \u0026gt;}} $$f(k;p_{0}^{*}) = \\begin{cases}p_{0}^{*} \u0026amp; \\text{if }k=1, \\\\ 1-p_{0}^{*} \u0026amp; \\text{if }k=0.\\end{cases}$$ {{\u0026lt; /math \u0026gt;}} renders as\n$$ f(k;p_{0}^{*}) = \\begin{cases}p_{0}^{*} \u0026amp; \\text{if }k=1, \\\\ 1-p_{0}^{*} \u0026amp; \\text{if }k=0.\\end{cases} $$ Diagrams Wowchemy supports a Markdown extension for diagrams. You can enable this feature by toggling the diagram option in your config/_default/params.toml file or by adding diagram: true to your page front matter.\nAn example flowchart:\n```mermaid graph TD A[Hard] --\u0026gt;|Text| B(Round) B --\u0026gt; C{Decision} C --\u0026gt;|One| D[Result 1] C --\u0026gt;|Two| E[Result 2] ``` renders as\ngraph TD A[Hard] --\u0026gt;|Text| B(Round) B --\u0026gt; C{Decision} C --\u0026gt;|One| D[Result 1] C --\u0026gt;|Two| E[Result 2] An example sequence diagram:\n```mermaid sequenceDiagram Alice-\u0026gt;\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts! John--\u0026gt;\u0026gt;Alice: Great! John-\u0026gt;\u0026gt;Bob: How about you? Bob--\u0026gt;\u0026gt;John: Jolly good! ``` renders as\nsequenceDiagram Alice-\u0026gt;\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts! John--\u0026gt;\u0026gt;Alice: Great! John-\u0026gt;\u0026gt;Bob: How about you? Bob--\u0026gt;\u0026gt;John: Jolly good! An example Gantt diagram:\n```mermaid gantt section Section Completed :done, des1, 2014-01-06,2014-01-08 Active :active, des2, 2014-01-07, 3d Parallel 1 : des3, after des1, 1d Parallel 2 : des4, after des1, 1d Parallel 3 : des5, after des3, 1d Parallel 4 : des6, after des4, 1d ``` renders …","date":1562889600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1562889600,"objectID":"07e02bccc368a192a0c76c44918396c3","permalink":"https://meganrafferty.github.io/post/writing-technical-content/","publishdate":"2019-07-12T00:00:00Z","relpermalink":"/post/writing-technical-content/","section":"post","summary":"Wowchemy is designed to give technical content creators a seamless experience. You can focus on the content and Wowchemy handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.","tags":null,"title":"Writing technical content in Markdown","type":"post"},{"authors":["Megan Rafferty"],"categories":null,"content":" Create your slides in Markdown - click the Slides button to check out the example. Supplementary notes can be added here, including code, math, and images.\n","date":1554595200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1554595200,"objectID":"557dc08fd4b672a0c08e0a8cf0c9ff7d","permalink":"https://meganrafferty.github.io/publication/preprint/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/preprint/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example preprint / working paper","type":"publication"},{"authors":["Megan Rafferty"],"categories":[],"content":"from IPython.core.display import Image Image(\u0026#39;https://www.python.org/static/community_logos/python-logo-master-v3-TM-flattened.png\u0026#39;) print(\u0026#34;Welcome to Academic!\u0026#34;) Welcome to Academic! Install Python and JupyterLab Install Anaconda which includes Python 3 and JupyterLab.\nAlternatively, install JupyterLab with pip3 install jupyterlab.\nCreate or upload a Jupyter notebook Run the following commands in your Terminal, substituting \u0026lt;MY-WEBSITE-FOLDER\u0026gt; and \u0026lt;SHORT-POST-TITLE\u0026gt; with the file path to your Academic website folder and a short title for your blog post (use hyphens instead of spaces), respectively:\nmkdir -p \u0026lt;MY-WEBSITE-FOLDER\u0026gt;/content/post/\u0026lt;SHORT-POST-TITLE\u0026gt;/ cd \u0026lt;MY-WEBSITE-FOLDER\u0026gt;/content/post/\u0026lt;SHORT-POST-TITLE\u0026gt;/ jupyter lab index.ipynb The jupyter command above will launch the JupyterLab editor, allowing us to add Academic metadata and write the content.\nEdit your post metadata The first cell of your Jupter notebook will contain your post metadata (front matter).\nIn Jupter, choose Markdown as the type of the first cell and wrap your Academic metadata in three dashes, indicating that it is YAML front matter:\n--- title: My post\u0026#39;s title date: 2019-09-01 # Put any other Academic metadata here... --- Edit the metadata of your post, using the documentation as a guide to the available options.\nTo set a featured image, place an image named featured into your post’s folder.\nFor other tips, such as using math, see the guide on writing content with Academic.\nConvert notebook to Markdown jupyter nbconvert index.ipynb --to markdown --NbConvertApp.output_files_dir=. Example This post was created with Jupyter. The orginal files can be found at https://github.com/gcushen/hugo-academic/tree/master/exampleSite/content/post/jupyter\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1567641600,"objectID":"6e929dc84ed3ef80467b02e64cd2ed64","permalink":"https://meganrafferty.github.io/post/jupyter/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/post/jupyter/","section":"post","summary":"Learn how to blog in Academic using Jupyter notebooks","tags":[],"title":"Display Jupyter Notebooks with Academic","type":"post"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\nFeatures Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides Controls Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026#34;blueberry\u0026#34; if porridge == \u0026#34;blueberry\u0026#34;: print(\u0026#34;Eating...\u0026#34;) Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}} Press Space to play!\nOne Two Three A fragment can accept two optional parameters:\nclass: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}} Press the S key to view the speaker notes!\nOnly the speaker can read these notes Press S key to view Themes black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026#34;/media/boards.jpg\u0026#34; \u0026gt;}} {{\u0026lt; slide background-color=\u0026#34;#0000FF\u0026#34; \u0026gt;}} {{\u0026lt; slide class=\u0026#34;my-style\u0026#34; \u0026gt;}} Custom CSS Example Let’s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; } Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://meganrafferty.github.io/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":["Megan Rafferty","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software. Create your slides in Markdown - click the Slides button to check out the example. Supplementary notes can be added here, including code, math, and images.\n","date":1441065600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1441065600,"objectID":"966884cc0d8ac9e31fab966c4534e973","permalink":"https://meganrafferty.github.io/publication/journal-article/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/journal-article/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example journal article","type":"publication"},{"authors":["Megan Rafferty","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software. Create your slides in Markdown - click the Slides button to check out the example. Supplementary notes can be added here, including code, math, and images.\n","date":1372636800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1372636800,"objectID":"69425fb10d4db090cfbd46854715582c","permalink":"https://meganrafferty.github.io/publication/conference-paper/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/conference-paper/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":[],"title":"An example conference paper","type":"publication"}]